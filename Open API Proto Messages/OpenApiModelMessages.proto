option java_multiple_files = true;

option java_generate_equals_and_hash = true;

option java_package = "com.xtrader.protocol.openapi.v2.model";

option java_outer_classname = "ContainerOpenApiV2ModelMessages";

enum ProtoOAPayloadType {

    PROTO_OA_APPLICATION_AUTH_REQ = 2100;
    PROTO_OA_APPLICATION_AUTH_RES = 2101;
    PROTO_OA_ACCOUNT_AUTH_REQ = 2102;
    PROTO_OA_ACCOUNT_AUTH_RES = 2103;
    PROTO_OA_VERSION_REQ = 2104;
    PROTO_OA_VERSION_RES = 2105;
    PROTO_OA_NEW_ORDER_REQ = 2106;
    PROTO_OA_TRAILING_SL_CHANGED_EVENT = 2107;
    PROTO_OA_CANCEL_ORDER_REQ = 2108;
    PROTO_OA_AMEND_ORDER_REQ = 2109;
    PROTO_OA_AMEND_POSITION_SLTP_REQ = 2110;
    PROTO_OA_CLOSE_POSITION_REQ = 2111;
    PROTO_OA_ASSET_LIST_REQ = 2112;
    PROTO_OA_ASSET_LIST_RES = 2113;
    PROTO_OA_SYMBOLS_LIST_REQ = 2114;
    PROTO_OA_SYMBOLS_LIST_RES = 2115;
    PROTO_OA_SYMBOL_BY_ID_REQ = 2116;
    PROTO_OA_SYMBOL_BY_ID_RES = 2117;
    PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ = 2118;
    PROTO_OA_SYMBOLS_FOR_CONVERSION_RES = 2119;
    PROTO_OA_SYMBOL_CHANGED_EVENT = 2120;
    PROTO_OA_TRADER_REQ = 2121;
    PROTO_OA_TRADER_RES = 2122;
    PROTO_OA_TRADER_UPDATE_EVENT = 2123;
    PROTO_OA_RECONCILE_REQ = 2124;
    PROTO_OA_RECONCILE_RES = 2125;
    PROTO_OA_EXECUTION_EVENT = 2126;
    PROTO_OA_SUBSCRIBE_SPOTS_REQ = 2127;
    PROTO_OA_SUBSCRIBE_SPOTS_RES = 2128;
    PROTO_OA_UNSUBSCRIBE_SPOTS_REQ = 2129;
    PROTO_OA_UNSUBSCRIBE_SPOTS_RES = 2130;
    PROTO_OA_SPOT_EVENT = 2131;
    PROTO_OA_ORDER_ERROR_EVENT = 2132;
    PROTO_OA_DEAL_LIST_REQ = 2133;
    PROTO_OA_DEAL_LIST_RES = 2134;
    PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ = 2135;
    PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ = 2136;
    PROTO_OA_GET_TRENDBARS_REQ = 2137;
    PROTO_OA_GET_TRENDBARS_RES = 2138;
    PROTO_OA_EXPECTED_MARGIN_REQ = 2139;
    PROTO_OA_EXPECTED_MARGIN_RES = 2140;
    PROTO_OA_MARGIN_CHANGED_EVENT = 2141;
    PROTO_OA_ERROR_RES = 2142;
    PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ = 2143;
    PROTO_OA_CASH_FLOW_HISTORY_LIST_RES = 2144;
    PROTO_OA_GET_TICKDATA_REQ = 2145;
    PROTO_OA_GET_TICKDATA_RES = 2146;
    PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT = 2147;
    PROTO_OA_CLIENT_DISCONNECT_EVENT = 2148;
    PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ = 2149;
    PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES = 2150;
    PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ = 2151;
    PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES = 2152;
    PROTO_OA_ASSET_CLASS_LIST_REQ = 2153;
    PROTO_OA_ASSET_CLASS_LIST_RES = 2154;
    PROTO_OA_DEPTH_EVENT = 2155;
    PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ = 2156;
    PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES = 2157;
    PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ = 2158;
    PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES = 2159;
}

message ProtoOAAsset {
    required int64 assetId = 1;
    required string name = 2;
    optional string displayName = 3;
}

message ProtoOASymbol {
    required int64 symbolId = 1;
    required int32 digits = 2;
    required int32 pipPosition = 3;
    optional bool enableShortSelling = 4;
    optional bool guaranteedStopLoss = 5;
    optional ProtoOADayOfWeek swapRollover3Days = 6 [default = MONDAY];
    optional double swapLong = 7;
    optional double swapShort = 8;
    optional int64 maxVolume = 9;
    optional int64 minVolume = 10;
    optional int64 stepVolume = 11;
    optional uint64 maxExposure = 12;
    repeated ProtoOAInterval schedule = 13;
    required int64 commission = 14;
    optional ProtoOACommissionType commissionType = 15 [default = USD_PER_MIL_USD];
    optional uint32 slDistance = 16;
    optional uint32 tpDistance = 17;
    optional uint32 gslDistance = 18;
    optional int64 gslCharge = 19;
    optional ProtoOASymbolDistanceType distanceSetIn = 20 [default = SYMBOL_DISTANCE_IN_POINTS];
    optional int64 minCommission = 21;
    optional ProtoOAMinCommissionType minCommissionType = 22 [default = CURRENCY];
    optional string minCommissionAsset = 23 [default = "USD"];
    optional int64 rolloverCommission = 24;
    optional int32 skipRolloverDays = 25;
    optional string scheduleTimeZone = 26;
    optional ProtoOATradingMode tradingMode = 27 [default = ENABLED];
}

message ProtoOALightSymbol {
    required int64 symbolId = 1;
    optional string symbolName = 2;
    optional bool enabled = 3;
    optional int64 baseAssetId = 4;
    optional int64 quoteAssetId = 5;
}

enum ProtoOADayOfWeek {
    NONE = 0;
    MONDAY = 1;
    TUESDAY = 2;
    WEDNESDAY = 3;
    THURSDAY = 4;
    FRIDAY = 5;
    SATURDAY = 6;
    SUNDAY = 7;
}

message ProtoOAInterval {
    required uint32 startSecond = 3;
    required uint32 endSecond = 4;
}

enum ProtoOACommissionType {
    USD_PER_MIL_USD = 1; // USD per million USD volume - usually used for FX. Example: 50 USD for 1 mil USD of trading volume. In cents.
    USD_PER_LOT = 2; // USD per 1 lot - usually used for CFDs and futures for commodities, and indices. Example: 15 USD for 1 contract. In cents.
    PERCENTAGE = 3; // Percentage of trading volume - usually used for Equities. Example: 0.005% of notional trading volume. Multiplied by 100,00.
    QUOTE_CCY_PER_LOT = 4; // Quote ccy of Symbol per 1 lot - will be used for CFDs and futures for commodities, and indices. Example: 15 EUR for 1 contract of DAX. In cents.
}

enum ProtoOASymbolDistanceType {
    SYMBOL_DISTANCE_IN_POINTS = 1;
    SYMBOL_DISTANCE_IN_PERCENTAGE = 2;
}

enum ProtoOAMinCommissionType {
    CURRENCY = 1;
    QUOTE_CURRENCY = 2;
}

enum ProtoOATradingMode {
    ENABLED = 0;
    DISABLED_WITHOUT_PENDINGS_EXECUTION = 1;
    DISABLED_WITH_PENDINGS_EXECUTION = 2;
    CLOSE_ONLY_MODE = 3;
}

enum ProtoOAAccessRights {
    FULL_ACCESS = 0;
    CLOSE_ONLY = 1;
    NO_TRADING = 2;
    NO_LOGIN = 3;
}

enum ProtoOATotalMarginCalculationType {
    MAX = 0;
    SUM = 1;
    NET = 2;
}

enum ProtoOAAccountType {
    HEDGED = 0;
    NETTED = 1;
    SPREAD_BETTING = 2;
}

message ProtoOATrader {
    required int64 ctidTraderAccountId = 1;
    required int64 balance = 2; // it's in cents

    optional int64 balanceVersion = 3;
    optional int64 managerBonus = 4;
    optional int64 ibBonus = 5;
    optional int64 nonWithdrawableBonus = 6;
    optional ProtoOAAccessRights accessRights = 7 [default = FULL_ACCESS];
    required int64 depositAssetId = 8;
    optional bool swapFree = 9;
    optional uint32 leverageInCents = 10;
    optional ProtoOATotalMarginCalculationType totalMarginCalculationType = 11;
    optional uint32 maxLeverage = 12;
    optional bool frenchRisk = 13;
    optional int64 traderLogin = 14; 
    optional ProtoOAAccountType accountType = 15 [default = HEDGED];
    optional string brokerName = 16;
    optional int64 registrationTimestamp = 17; // Unix timestamp of the account registration. Should be used as minimal date in historical data requests.
}

/** Describes position status */
enum ProtoOAPositionStatus {
    POSITION_STATUS_OPEN = 1;
    POSITION_STATUS_CLOSED = 2;
    POSITION_STATUS_CREATED = 3;
    POSITION_STATUS_ERROR = 4;
}

enum ProtoOATradeSide {
    BUY = 1;
    SELL = 2;
}

enum ProtoOAOrderType {
    MARKET = 1;
    LIMIT = 2;
    STOP = 3;
    STOP_LOSS_TAKE_PROFIT = 4;
    MARKET_RANGE = 5;
    STOP_LIMIT = 6;
}

enum ProtoOATimeInForce {
    GOOD_TILL_DATE = 1;
    GOOD_TILL_CANCEL = 2;
    IMMEDIATE_OR_CANCEL = 3;
    FILL_OR_KILL = 4;
    MARKET_ON_OPEN = 5;
}

enum ProtoOAOrderStatus {

    ORDER_STATUS_ACCEPTED = 1;
    ORDER_STATUS_FILLED = 2;
    ORDER_STATUS_REJECTED = 3;
    ORDER_STATUS_EXPIRED = 4;
    ORDER_STATUS_CANCELLED = 5;

}

enum ProtoOAOrderTriggerMethod {
    TRADE = 1;
    OPPOSITE = 2;
    DOUBLE_TRADE = 3;
    DOUBLE_OPPOSITE = 4;
}

/** Represents a trade position */
message ProtoOAPosition {
    required int64 positionId = 1;
    required ProtoOATradeData tradeData = 2;
    required ProtoOAPositionStatus positionStatus = 3;
    required int64 swap = 4;
    optional double price = 5; // vwap price shown as entry price in cTrader
    optional double stopLoss = 6;
    optional double takeProfit = 7;
    optional int64 utcLastUpdateTimestamp = 8;
    optional int64 commission = 9;
    optional double marginRate = 10;
    optional int64 mirroringCommission = 11;
    optional bool guaranteedStopLoss = 12;
    optional uint64 usedMargin = 13;

    optional ProtoOAOrderTriggerMethod stopLossTriggerMethod = 14 [default = TRADE]; // Stop trigger method for SL/TP order
}

/** Represents a trade position */
message ProtoOATradeData {
    required int64 symbolId = 1;
    required int64 volume = 2;
    required ProtoOATradeSide tradeSide = 3;
    optional int64 openTimestamp = 4;
    optional string label = 5;
    optional bool guaranteedStopLoss = 6;
}

/** Represents an order */
message ProtoOAOrder {
    required int64 orderId = 1;
    required ProtoOATradeData tradeData = 2;
    required ProtoOAOrderType orderType = 3;
    required ProtoOAOrderStatus orderStatus = 4;
    optional int64 expirationTimestamp = 6;
    optional double executionPrice = 7; // price at which an order was executed

    optional int64 executedVolume = 8;
    optional int64 utcLastUpdateTimestamp = 9;
    optional double baseSlippagePrice = 10;
    optional int64 slippageInPoints = 11;
    optional bool closingOrder = 12;

    optional double limitPrice = 13;
    optional double stopPrice = 14;
    optional double stopLoss = 15;
    optional double takeProfit = 16;

    optional string clientOrderId = 17; // Optional ClientOrderId. Max Length = 50 chars.
    optional ProtoOATimeInForce timeInForce = 18 [default = IMMEDIATE_OR_CANCEL];
    optional int64 positionId = 19;
    optional int64 relativeStopLoss = 20;
    optional int64 relativeTakeProfit = 21;
    optional bool isStopOut = 22;
    optional bool trailingStopLoss = 23;
    optional ProtoOAOrderTriggerMethod stopTriggerMethod = 24 [default = TRADE]; // Trigger method for main pending order
}

enum ProtoOAExecutionType {
    ORDER_ACCEPTED = 2;
    ORDER_FILLED = 3;
    ORDER_REPLACED = 4;
    ORDER_CANCELLED = 5;
    ORDER_EXPIRED = 6;
    ORDER_REJECTED = 7;
    ORDER_CANCEL_REJECTED = 8;
    SWAP = 9;
    DEPOSIT_WITHDRAW = 10;
    ORDER_PARTIAL_FILL = 11;
    BONUS_DEPOSIT_WITHDRAW = 12;
}

message ProtoOABonusDepositWithdraw {
    required ProtoOAChangeBonusType operationType = 1;
    required int64 bonusHistoryId = 2;
    required int64 managerBonus = 3;
    required int64 managerDelta = 4;
    required int64 ibBonus = 5;
    required int64 ibDelta = 6;
    required int64 changeBonusTimestamp = 7;
    optional string externalNote = 8;
    optional int64 introducingBrokerId = 9;
}

enum ProtoOAChangeBonusType {
    BONUS_DEPOSIT = 0;
    BONUS_WITHDRAW = 1;
}

message ProtoOADepositWithdraw {
    required ProtoOAChangeBalanceType operationType = 1;
    required int64 balanceHistoryId = 2;
    required int64 balance = 3;
    required int64 delta = 4;
    required int64 changeBalanceTimestamp = 5;
    optional string externalNote = 6;
    optional int64 balanceVersion = 7;
    optional int64 equity = 8;
}

enum ProtoOAChangeBalanceType {
    BALANCE_DEPOSIT = 0;
    BALANCE_WITHDRAW = 1;
    BALANCE_DEPOSIT_STRATEGY_COMMISSION_INNER = 3;
    BALANCE_WITHDRAW_STRATEGY_COMMISSION_INNER = 4;
    BALANCE_DEPOSIT_IB_COMMISSIONS = 5;
    BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE = 6;
    BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_SUB_IB = 7;
    BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_BROKER = 8;
    BALANCE_DEPOSIT_REBATE = 9;
    BALANCE_WITHDRAW_REBATE = 10;
    BALANCE_DEPOSIT_STRATEGY_COMMISSION_OUTER = 11;
    BALANCE_WITHDRAW_STRATEGY_COMMISSION_OUTER = 12;
    BALANCE_WITHDRAW_BONUS_COMPENSATION = 13;
    BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE_TO_BROKER = 14;
    BALANCE_DEPOSIT_DIVIDENDS = 15;
    BALANCE_WITHDRAW_DIVIDENDS = 16;
    BALANCE_WITHDRAW_GSL_CHARGE = 17;
    BALANCE_WITHDRAW_ROLLOVER = 18;
    BALANCE_DEPOSIT_NONWITHDRAWABLE_BONUS = 19;
    BALANCE_WITHDRAW_NONWITHDRAWABLE_BONUS = 20;
    BALANCE_DEPOSIT_SWAP = 21;
    BALANCE_WITHDRAW_SWAP = 22;

    BALANCE_DEPOSIT_MANAGEMENT_FEE = 27;
    BALANCE_WITHDRAW_MANAGEMENT_FEE = 28;
    BALANCE_DEPOSIT_PERFORMANCE_FEE = 29;
}

message ProtoOADeal {
    required int64 dealId = 1;
    required int64 orderId = 2;
    required int64 positionId = 3;
    required int64 volume = 4;
    required int64 filledVolume = 5;
    required int64 symbolId = 6;
    required int64 createTimestamp = 7;
    required int64 executionTimestamp = 8;
    optional int64 utcLastUpdateTimestamp = 9;
    optional double executionPrice = 10;
    required ProtoOATradeSide tradeSide = 11;
    required ProtoOADealStatus dealStatus = 12;
    optional double marginRate = 13;
    optional int64 commission = 14;
    optional double baseToUsdConversionRate = 15;
    optional ProtoOAClosePositionDetail closePositionDetail = 16;
}

enum ProtoOADealStatus {
    FILLED = 2;
    PARTIALLY_FILLED = 3;
    REJECTED = 4;
    INTERNALLY_REJECTED = 5;
    ERROR = 6;
    MISSED = 7;
}

message ProtoOAClosePositionDetail {
    required double entryPrice = 1;
    required int64 grossProfit = 2;
    required int64 swap = 3;
    required int64 commission = 4;
    required int64 balance = 5;

    optional double quoteToDepositConversionRate = 6;
    optional int64 closedVolume = 7;
    optional int64 balanceVersion = 8;
}

enum ProtoOATrendbarPeriod {
    M1 = 1;
    M2 = 2;
    M3 = 3;
    M4 = 4;
    M5 = 5;
    M10 = 6;
    M15 = 7;
    M30 = 8;
    H1 = 9;
    H4 = 10;
    H12 = 11;
    D1 = 12;
    W1 = 13;
    MN1 = 14;
}

message ProtoOATrendbar {
    required int64 volume = 3;
    optional ProtoOATrendbarPeriod period = 4 [default = M1]; //default for handle .Net protobuf generator bug
    optional int64 low = 5;
    optional uint64 deltaOpen = 6;
    optional uint64 deltaClose = 7;
    optional uint64 deltaHigh = 8;
    optional uint32 utcTimestampInMinutes = 9;
}

message ProtoOAExpectedMargin {
    required int64 volume = 1;
    required int64 buyMargin = 2;
    required int64 sellMargin = 3;
}

enum ProtoOAQuoteType {
    BID = 1;
    ASK = 2;
}

message ProtoOATickData {
    required int64 timestamp = 1;
    required int64 tick = 2;
}

enum ProtoOAClientPermissionScope {
    SCOPE_VIEW = 0;
    SCOPE_TRADE = 1;
}

message ProtoOACtidProfile {
    required int64 userId = 1;
}

message ProtoOACtidTraderAccount {
    required uint64 ctidTraderAccountId = 1;
    optional bool isLive = 2;
}

message ProtoOAAssetClass {
    optional int64 id = 1;
    optional string name = 2;
}

message ProtoOADepthQuote {
    required uint64 id = 1;
    required uint64 size = 3;
    optional uint64 bid = 4;
    optional uint64 ask = 5;
}

enum ProtoOAErrorCode {
    OA_AUTH_TOKEN_EXPIRED = 1;
    INCORRECT_BOUNDARIES = 35;
}